name: Release nightly

on:
  push:
    branches:
      - main
    paths:
      - .github/workflows/build.yml

  schedule:
    - cron: "0 0 1,15 * *"

  workflow_dispatch:

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          # TODO: Get host platform from somewhere instead of specifying it explicitly here.
          - os: macos-15-intel
            bundle_os: macos
            ext: dylib
            target: x86_64-apple-darwin
          - os: macos-15
            bundle_os: macos
            ext: dylib
            target: aarch64-apple-darwin
          - os: ubuntu-latest
            bundle_os: linux
            ext: so
            host: x86_64-unknown-linux-gnu
          - os: windows-latest
            bundle_os: windows
            ext: dll
            host: x86_64-pc-windows-msvc
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      # - name: Install rust toolchain
      #   uses: actions-rs/toolchain@v1
      #   with:
      #     toolchain: stable
      #     override: true

      - name: Get npm cache dir
        id: npm-cache-dir
        shell: bash
        run: |
          echo "dir=$(npm config get cache)" >> ${GITHUB_OUTPUT}

      - uses: actions/cache@v3
        with:
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-node
          restore-keys: ${{ runner.os }}-node

      - run: .github/script/setup
        shell: bash

      - name: Install tree-sitter CLI
        run: npm install -g tree-sitter-cli

      - name: Determine version
        run: |
          echo BUNDLE_VERSION=$(script/bundle-version-prefix).${{ github.run_number }} >> $GITHUB_ENV
        shell: bash

      - name: Install current Bash on macOS
        if: runner.os == 'macos'
        run: brew install bash

      - run: script/compile all -target "${{ matrix.target }}" -version "${{ env.BUNDLE_VERSION  }}"
        shell: bash
        id: compile
        continue-on-error: ${{ runner.os != 'Windows' }}

      - run: script/inspect-binaries
        continue-on-error: true
        id: inspect-binary
        shell: bash

      - name: Rename cross-compilation's binary
        if: matrix.target
        run: |
          mv tree-sitter-grammars-${{ matrix.bundle_os }}-${{ env.BUNDLE_VERSION }}.tar.gz tree-sitter-grammars.${{ matrix.target }}.v${{ env.BUNDLE_VERSION }}.tar.gz
      - name: Make a target-explicit copy of native compilation's binary
        if: ${{ !matrix.target && matrix.host }}
        shell: bash
        run: |
          mv tree-sitter-grammars-${{ matrix.bundle_os }}-${{ env.BUNDLE_VERSION }}.tar.gz tree-sitter-grammars.${{ matrix.host }}.v${{ env.BUNDLE_VERSION }}.tar.gz

      # Upload release for each build
      - name: Upload binaries to release
        if: steps.inspect-binary.outcome == 'success'
        id: upload_release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ github.token }}
          file: tree-sitter-grammars*.tar.gz
          file_glob: true
          tag: ${{ env.BUNDLE_VERSION }}
          release_name: ${{ env.BUNDLE_VERSION }}
          draft: false
          prerelease: true

    # outputs:
    #   version: ${{ env.BUNDLE_VERSION }}
